{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"practica_nginx/","title":"Practica nginx","text":""},{"location":"practica_nginx/#natividad-marquez-baena","title":"Natividad M\u00e1rquez Baena","text":""},{"location":"practica_nginx/#instalacion-y-configuracion-de-un-servidor-debian","title":"Instalaci\u00f3n y configuraci\u00f3n de un Servidor Debian","text":"<ol> <li>Instalaci\u00f3n servidor web Nginx</li> <li>Creaci\u00f3n de las carpeta del sitio web</li> <li>Configuraci\u00f3n de servidor web NGINX</li> <li>Comprobaciones</li> <li>FTP</li> <li>HTTPS</li> </ol>"},{"location":"practica_nginx/#1instalacion-servidor-web-nginx","title":"1.Instalaci\u00f3n servidor web Nginx","text":"<p>Para la instalaci\u00f3n de un servidor web nginx, previamente se han de actualizar los repositorios. Posteriormente se realizar\u00e1 la instalaci\u00f3n con <code>sudo apt install nginx</code></p> <p> </p> <p>Finalmente se hace una comprobaci\u00f3n mediante <code>systemctl status nginx</code>. </p>"},{"location":"practica_nginx/#2creacion-de-las-carpeta-del-sitio-web","title":"2.Creaci\u00f3n de las carpeta del sitio web","text":"<p>Primeramente se crear\u00e1 una carpeta donde se almacenar\u00e1 el dominio. El nombre de este es de libre elecci\u00f3n:  Posteriormente se clonar\u00e1 un repositorio en dicha carpeta:  Es importante otorgar permisos como propietario de esta carpeta y todo su contenido, al usuario www-data, que generalmente es el del servicio web. Adem\u00e1s le otorgaremos los permisos adecuados para evitar errores.  Para comprobar el buen funcionamiento del servidor se hace uso de <code>ip a</code>, accediendo desde nuestro cliente con un navegador.  </p> <p>Esta ultima imagen nos indica que el servidor est\u00e1 en pleno funcionamiento.</p>"},{"location":"practica_nginx/#3configuracion-de-servidor-web-nginx","title":"3.Configuraci\u00f3n de servidor web NGINX","text":"<p>En Nginx existen dos rutas clave. La primera es <code>sites-available</code>, que almacena los archivos de configuraci\u00f3n de los bloques o hosts virtuales disponibles en el servidor. </p> <p>La segunda es <code>sites-enabled</code>, donde se encuentran los archivos de configuraci\u00f3n de los sitios que est\u00e1n activos y operativos en ese momento.</p> <p>Dentro de <code>sites-available</code> se incluye un archivo de configuraci\u00f3n por defecto (default), el cual corresponde a la p\u00e1gina que se muestra cuando se accede al servidor sin especificar un sitio web, o si no se encuentra el sitio solicitado, por ejemplo, la p\u00e1gina que se vio con anterioridad.</p> <p>Para que Nginx presente su contenido, es necesario definir un bloque de servidor con las directivas adecuadas. En lugar de editar directamente el archivo de configuraci\u00f3n predeterminado, crearemos uno nuevo, donde <code>nombre_web</code> ser\u00e1 uno que se otorgue de manera libre.</p> <p></p> <p>El contenido del archivo creado ser\u00e1 el siguiente: </p> <p>Tambi\u00e9n crearemos un enlace simb\u00f3lico entre este archivo y el directorio de sitios habilitados, de modo que el sitio se active autom\u00e1ticamente.</p> <p></p> <p>Finalmente reiniciamos el servidor con <code>sudo systemctl restart nginx</code>.</p>"},{"location":"practica_nginx/#4comprobaciones","title":"4.Comprobaciones","text":"<p>En este apartado se realiza la comprobaci\u00f3n del correcto funcionamiento del servidor y los registros del servidor. Dado que a\u00fan no contamos con un servidor DNS que traduzca nombres a direcciones IP, tendremos que hacerlo manualmente. Para ello, editaremos el archivo <code>/etc/hosts</code>, de nuestra m\u00e1quina anfitriona, asignando la IP de la m\u00e1quina virtual a nuestro server_name (mi_dominio).</p> <p> En sistemas Linux, este archivo se encuentra en: <code>/etc/hosts</code> En Windows, est\u00e1 ubicado en: <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code> Se deber\u00e1 a\u00f1adir <code>192.168.X.X nombre_web</code>, sustituyendo los dos ultimos d\u00edgitos por los de la IP de la m\u00e1quina virtual. Adem\u00e1s de cambiar el nombre al de nuestro dominio.</p> <p>Una vez comprobado el funcionamiento del servidor, se procede a la comprobaci\u00f3n de los registros del servidor. Se verificar\u00e1 que las solicitudes se est\u00e9n registrando correctamente en los archivos de logs, tanto las correctas como err\u00f3neas.  </p>"},{"location":"practica_nginx/#5ftp","title":"5.FTP","text":"<p>Para transferir archivos desde la m\u00e1quina anfitriona a la m\u00e1quina virtual o servidor remoto, el m\u00e9todo mas empleado suele ser Github, sin embargo, en esta practica se emplea una alternativa, el FTP un Protocolo de transferencia de archivos entre sistemas conectados en una red TCP.</p> <p>Actualmente lleva aplicada la extension SSH (Secure Shell Prococol) para implementar un canal seguro de transferencia de archivos con cifrado.</p> <p>Para configurar un servidor SFTP en la m\u00e1quina virtual de Debian, se han de actualizar previamente los repositorios y realizar la instalacion de vsftpd.</p> <p>  A continuaci\u00f3n crea una carpeta con el home de Debian</p> <p></p> <p>Posteriormente se crean los certificados de seguridad necesarios para la capa de cifrado a nuestra conexi\u00f3n. En este paso se realiza la configuraci\u00f3n propiamente dicha del vsfptd. Eliminamos las primeras lineas del archivo:</p> <pre><code>rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\nrsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nssl_enable=NO\n</code></pre> <p>Y posteriormente se a\u00f1aden las siguientes lineas, sin olvidar modificar la \u00faltima de ella con el nombre del <code>home</code> escogido con anterioridad.</p> <pre><code>rsa_cert_file=/etc/ssl/private/vsftpd.pem\nrsa_private_key_file=/etc/ssl/private/vsftpd.pem\nssl_enable=YES\nallow_anon_ssl=NO\nforce_local_data_ssl=YES\nforce_local_logins_ssl=YES\nssl_tlsv1=YES\nssl_sslv2=NO\nssl_sslv3=NO\nrequire_ssl_reuse=NO\nssl_ciphers=HIGH\n\nlocal_root=/home/nombre_usuario/ftp\n</code></pre> <p> </p> <p>Finalmente se reinicia el servicio para aplicar los cambios.</p> <p></p> <p>Actualmente ya ser\u00eda posible el acceso al servidor mediante un cliente FTP. En esta practica se ha empleado el cliente <code>Firezilla</code>, que se descargar\u00e1 previamente. Existen dos maneras de acceder: Mediante el puerto por defecto del protocolo inseguro FTP, el 21, pero utilizando certificados que cifran el intercambio de datos convirti\u00e9ndolo as\u00ed en seguro, o mediante el puerto 22, con una conexi\u00f3n similar a SSH.</p> <p>En el casi del puerto 21 se espera obtener el siguiente certificado.</p> <p></p> <p>Si se utiliza el puerto 22, se han de rellenar los datos de usuario y contrase\u00f1a para conectar con el servidor, adem\u00e1s de la IP de la m\u00e1quina virtual Debian. Previamente se escoge un archivo como ejemplo de transmision de datos entre la maquina anfitriona y la virutal.</p> <p>En el entorno gr\u00e1fico de Firezilla, desde el directorio local, nevegamos hacia la carpeta donde est\u00e1 el archivo escogido de ejemplo. Se marca el directorio del servidor remoto al que queremos hacer la transmision del archivo. Posteriormente seleccionamos el archivo con clic derecho y seleccionamos subir.   Tras esperar unos instantes, el archivo se habr\u00e1 trasnmitido al directorio de la m\u00e1quina virtual. Se realiza una comprobaci\u00f3n desde el entorno gr\u00e1fico navegando hacia el directorio final y comprobando que, efectivamente el archivo se ha transmitido correctamente.</p> <p></p>"},{"location":"practica_nginx/#6https","title":"6.HTTPS","text":"<p>Es necesario a\u00f1adir una capa de seguridad al servidor, de manera que todos los sitios web alojados accedan siempre mediante certificados de SSL, con el uso de HTTPS. Con este certidicado se encriptar\u00e1 la conexion entre el servidor y el cliente.</p> <p> Para generar un certificado autofirmado SSL y una clave privada se emplea el siguiente comando: </p> <p>A continuaci\u00f3n se modifica el archivo de texto, con el fin de establecer la configuraci\u00f3n del dominio, donde se define la direcci\u00f3n IP del dominio, el nombre del servidor (en este caso mi_dominio),los puertos certificados SSL y otras directrices. </p> <p> </p> <p>En este punto, para comprobar la configuraci\u00f3n del servidor nginx se emplea el comando <code>sudo nginx -t</code>. Con esto se verifica que los archivos de configuraci\u00f3n tengan una correcta sintaxis y sean v\u00e1lidos.</p> <p></p> <p>Posteriormente se reinicia el servicio de nginx para aplicar los cambios y efectuarlos.</p> <p></p> <p>Finalmente, todo est\u00e1 listo para acceder al servidor creado</p> <p></p>"}]}